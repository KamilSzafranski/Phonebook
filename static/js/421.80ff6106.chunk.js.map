{"version":3,"file":"static/js/421.80ff6106.chunk.js","mappings":"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","sources":["pages/register/register.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-3HLJVDJ7.mjs","../node_modules/@chakra-ui/image/dist/chunk-QBIO4VEB.mjs","../node_modules/@chakra-ui/image/dist/chunk-E77276RR.mjs"],"sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  Box,\n  Input,\n  Button,\n  Image,\n  Heading,\n} from \"@chakra-ui/react\";\n\nimport phonnebook from \"../../image/phonebook.jpg\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerThunk } from \"redux/auth/auth.thunk\";\nimport { selectIsLogin } from \"redux/selector\";\nimport { useEffect } from \"react\";\nimport { selectAuthPending } from \"redux/selector\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(selectIsLogin);\n  const navigate = useNavigate();\n  const pending = useSelector(selectAuthPending);\n\n  useEffect(() => {\n    if (isLogin) navigate(\"/contacts\");\n  }, [isLogin, navigate]);\n\n  const handleRegister = event => {\n    event.preventDefault();\n\n    const { name, email, password } = event.currentTarget.elements;\n\n    const user = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n\n    dispatch(registerThunk(user));\n  };\n\n  return (\n    <Box\n      bg=\"gray.700\"\n      h=\"100vh\"\n      display=\"grid\"\n      justifyItems=\"center\"\n      gap=\"30px\"\n      color=\"white\"\n    >\n      <Heading as=\"h2\" color=\"white\" alignSelf=\"end\">\n        Registration\n      </Heading>\n      <form onSubmit={handleRegister}>\n        <FormControl w=\"350px\" mb=\"15px\">\n          <FormLabel htmlFor=\"name\">Name</FormLabel>\n          <Input\n            id=\"name\"\n            name=\"name\"\n            type=\"name\"\n            focusBorderColor=\"teal.400\"\n          />\n        </FormControl>\n        <FormControl w=\"350px\" mb=\"15px\">\n          <FormLabel htmlFor=\"email\">Email address</FormLabel>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            focusBorderColor=\"teal.400\"\n          />\n        </FormControl>\n        <FormControl w=\"350px\" mb=\"20px\">\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            focusBorderColor=\"teal.400\"\n            minLength=\"7\"\n          />\n        </FormControl>\n        <FormControl display=\"flex\" justifyContent=\"center\">\n          <Button\n            type=\"submit\"\n            colorScheme=\"teal\"\n            isLoading={pending}\n            loadingText=\"In progress\"\n          >\n            Register\n          </Button>\n        </FormControl>\n      </form>\n      <Image\n        src={phonnebook}\n        position=\"absolute\"\n        left=\"0\"\n        bottom=\"0\"\n        borderRadius=\"5px\"\n        sx={{\n          clipPath:\n            \"polygon(0% 0%, 65.7% 0.5%, 99.9% 58.5%, 100% 100%, 76.2% 100%, 0% 100%, 0% 85%, 0% 15%)\",\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Register;\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n","import {\n  NativeImage\n} from \"./chunk-QBIO4VEB.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n"],"names":["dispatch","useDispatch","isLogin","useSelector","selectIsLogin","navigate","useNavigate","pending","selectAuthPending","useEffect","bg","h","display","justifyItems","gap","color","as","alignSelf","onSubmit","event","preventDefault","currentTarget","elements","name","email","password","user","value","registerThunk","w","mb","htmlFor","I","id","type","focusBorderColor","minLength","justifyContent","colorScheme","isLoading","loadingText","src","phonnebook","position","left","bottom","borderRadius","sx","clipPath","FormLabel","forwardRef","passedProps","ref","_a","styles","useStyleConfig","props","omitThemingProps","children","className","requiredIndicator","jsx","RequiredIndicator","optionalIndicator","rest","field","useFormControlContext","ownProps","getLabelProps","jsxs","chakra","cx","__css","textAlign","isRequired","displayName","useFormControlStyles","getRequiredIndicatorProps","NativeImage","htmlWidth","htmlHeight","alt","width","height","Image","fallbackSrc","fallback","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","keysToOmit","clone","Object","assign","key","omit"],"sourceRoot":""}