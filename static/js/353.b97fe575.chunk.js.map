{"version":3,"file":"static/js/353.b97fe575.chunk.js","mappings":"qSAiEA,UA7CoB,SAAAA,GAClB,IAAMC,GAAYC,EAAAA,EAAAA,UACZC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAKF,EAAAA,EAAAA,IAAYG,EAAAA,IAQjBC,EAAc,kBAAMT,GAASU,EAAAA,EAAAA,MAAf,EAEpB,OACE,SAAC,IAAD,CACEC,OAAQP,IAAUQ,EAAAA,EAAAA,aAClBC,oBAAqBf,EACrBgB,QAASL,EAHX,UAKE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAmBM,SAAS,KAAKC,WAAW,OAA5C,6BAIA,SAAC,IAAD,oEAIA,UAAC,IAAD,YACE,SAAC,IAAD,CAAQC,IAAKnB,EAAWoB,QAAST,EAAjC,qBAGA,SAAC,IAAD,CAAQU,YAAY,MAAMD,QA7Bf,SAAAE,GACnBA,EAAEC,iBACFrB,GAASsB,EAAAA,EAAAA,IAAef,IACxBP,GAASuB,EAAAA,EAAAA,GAAgB,KACzBrB,EAAS,YACV,EAwB0DsB,GAAI,EAArD,6BAQX,C,uKCrDD,SAASC,EAAY5B,GACnB,IAAQgB,EAAiChB,EAAjCgB,oBAAwBa,GAAhC,OAAyC7B,EAAzC,GACA,OAAuB8B,EAAAA,EAAAA,KAAIC,EAAAA,IAAD,QAAC,UAAYF,GAAb,IAAmBG,gBAAiBhB,IAC/D,CACD,IAAIiB,GAAqBC,EAAAA,EAAAA,IACvB,SAAClC,EAAOoB,GAAR,OAAgCU,EAAAA,EAAAA,KAAIK,EAAAA,GAAD,QAAiBf,IAAAA,EAAKgB,KAAM,eAAkBpC,GAAjF,G","sources":["components/DeleteAlert/DeleteAlert.jsx","../node_modules/@chakra-ui/modal/dist/chunk-BPJV7R7V.mjs"],"sourcesContent":["import {\n  AlertDialog,\n  AlertDialogOverlay,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogBody,\n  AlertDialogFooter,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { deleteContacts } from \"redux/phoneBook/phoneBook.thunk\";\nimport { selectIdToDelete, selectModal } from \"redux/selector\";\nimport { ModalStatus } from \"redux/constant\";\nimport { closeModalAction } from \"redux/phoneBook/phoneBook.slice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addFilterAction } from \"redux/filters/filters.slice\";\n\nconst DeleteAlert = props => {\n  const cancelRef = useRef();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const modal = useSelector(selectModal);\n  const id = useSelector(selectIdToDelete);\n  const handleDelete = e => {\n    e.preventDefault();\n    dispatch(deleteContacts(id));\n    dispatch(addFilterAction(\"\"));\n    navigate(\"/contacts\");\n  };\n\n  const handleClose = () => dispatch(closeModalAction());\n\n  return (\n    <AlertDialog\n      isOpen={modal === ModalStatus.DELETE_ALERT}\n      leastDestructiveRef={cancelRef}\n      onClose={handleClose}\n    >\n      <AlertDialogOverlay>\n        <AlertDialogContent>\n          <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n            Delete Contact\n          </AlertDialogHeader>\n\n          <AlertDialogBody>\n            Are you sure? You can't undo this action afterwards.\n          </AlertDialogBody>\n\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button colorScheme=\"red\" onClick={handleDelete} ml={3}>\n              Delete\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialogOverlay>\n    </AlertDialog>\n  );\n};\n\nexport default DeleteAlert;\n","import {\n  ModalContent\n} from \"./chunk-66WFFNY3.mjs\";\nimport {\n  Modal\n} from \"./chunk-UUGUEMMH.mjs\";\n\n// src/alert-dialog.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AlertDialog(props) {\n  const { leastDestructiveRef, ...rest } = props;\n  return /* @__PURE__ */ jsx(Modal, { ...rest, initialFocusRef: leastDestructiveRef });\n}\nvar AlertDialogContent = forwardRef(\n  (props, ref) => /* @__PURE__ */ jsx(ModalContent, { ref, role: \"alertdialog\", ...props })\n);\n\nexport {\n  AlertDialog,\n  AlertDialogContent\n};\n"],"names":["props","cancelRef","useRef","dispatch","useDispatch","navigate","useNavigate","modal","useSelector","selectModal","id","selectIdToDelete","handleClose","closeModalAction","isOpen","ModalStatus","leastDestructiveRef","onClose","fontSize","fontWeight","ref","onClick","colorScheme","e","preventDefault","deleteContacts","addFilterAction","ml","AlertDialog","rest","jsx","Modal","initialFocusRef","AlertDialogContent","forwardRef","ModalContent","role"],"sourceRoot":""}