{"version":3,"file":"static/js/108.0a74f7c7.chunk.js","mappings":"yQAyDA,UAxCmB,SAAAA,GACjB,IAAMC,GAAYC,EAAAA,EAAAA,UACZC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAM1B,OACE,SAAC,IAAD,CACEC,OAAQF,IAAUG,EAAAA,EAAAA,YAClBC,oBAAqBX,EACrBY,QANqB,kBAAMP,GAASQ,EAAAA,EAAAA,MAAf,EAGvB,UAKE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAmBC,SAAS,KAAKC,WAAW,OAA5C,sBAIA,UAAC,IAAD,kCAA+Bb,OAE/B,SAAC,IAAD,WACE,SAAC,IAAD,CAAQc,IAAKhB,EAAWiB,QAnBZ,kBAAMC,SAASC,SAASC,QAAxB,EAmBZ,kCAQX,C,uKCxCD,SAASC,EAAYtB,GACnB,IAAQY,EAAiCZ,EAAjCY,oBAAwBW,GAAhC,OAAyCvB,EAAzC,GACA,OAAuBwB,EAAAA,EAAAA,KAAIC,EAAAA,IAAD,QAAC,UAAYF,GAAb,IAAmBG,gBAAiBd,IAC/D,CACD,IAAIe,GAAqBC,EAAAA,EAAAA,IACvB,SAAC5B,EAAOiB,GAAR,OAAgCO,EAAAA,EAAAA,KAAIK,EAAAA,GAAD,QAAiBZ,IAAAA,EAAKa,KAAM,eAAkB9B,GAAjF,G","sources":["components/ErrorAlert/ErrorAlert.jsx","../node_modules/@chakra-ui/modal/dist/chunk-BPJV7R7V.mjs"],"sourcesContent":["import {\n  AlertDialog,\n  AlertDialogOverlay,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogBody,\n  AlertDialogFooter,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectError, selectModal } from \"redux/selector\";\nimport PropTypes from \"prop-types\";\nimport { ModalStatus } from \"redux/constant\";\nimport { closeModalAction } from \"redux/phoneBook/phoneBook.slice\";\n\nconst ErrorAlert = props => {\n  const cancelRef = useRef();\n  const errorType = useSelector(selectError);\n  const dispatch = useDispatch();\n  const modal = useSelector(selectModal);\n\n  const handleRefresh = () => document.location.reload();\n\n  const handleCloseModal = () => dispatch(closeModalAction());\n\n  return (\n    <AlertDialog\n      isOpen={modal === ModalStatus.ERROR_ALERT}\n      leastDestructiveRef={cancelRef}\n      onClose={handleCloseModal}\n    >\n      <AlertDialogOverlay>\n        <AlertDialogContent>\n          <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n            Oops!!!\n          </AlertDialogHeader>\n\n          <AlertDialogBody>ErroCode: {`${errorType}`}</AlertDialogBody>\n\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={handleRefresh}>\n              Refresh Page\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialogOverlay>\n    </AlertDialog>\n  );\n};\n\nErrorAlert.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default ErrorAlert;\n","import {\n  ModalContent\n} from \"./chunk-66WFFNY3.mjs\";\nimport {\n  Modal\n} from \"./chunk-UUGUEMMH.mjs\";\n\n// src/alert-dialog.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AlertDialog(props) {\n  const { leastDestructiveRef, ...rest } = props;\n  return /* @__PURE__ */ jsx(Modal, { ...rest, initialFocusRef: leastDestructiveRef });\n}\nvar AlertDialogContent = forwardRef(\n  (props, ref) => /* @__PURE__ */ jsx(ModalContent, { ref, role: \"alertdialog\", ...props })\n);\n\nexport {\n  AlertDialog,\n  AlertDialogContent\n};\n"],"names":["props","cancelRef","useRef","errorType","useSelector","selectError","dispatch","useDispatch","modal","selectModal","isOpen","ModalStatus","leastDestructiveRef","onClose","closeModalAction","fontSize","fontWeight","ref","onClick","document","location","reload","AlertDialog","rest","jsx","Modal","initialFocusRef","AlertDialogContent","forwardRef","ModalContent","role"],"sourceRoot":""}